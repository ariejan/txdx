default:
  image: cirrusci/flutter:stable
  cache:
    key:
      files:
        - pubspec.lock
    paths:
      - .pub-cache/

variables:
  DARWIN_AMD64_BINARY: "txdx-macos-${CI_COMMIT_TAG}.zip"
  SNAP_AMD64_BINARY: "txdx-${CI_COMMIT_TAG}_amd64.snap"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/txdx/${CI_COMMIT_TAG}"

stages:
  - lint
  - test
  - coverage
  - build
  - upload
  - release

analyze:
  stage: lint
  script:
    - flutter pub get
    - flutter analyze

test:
  stage: test
  script:
    - pub global activate junitreport
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
    - flutter pub get
    - flutter test --coverage --machine | tojunit > testreport.xml
  artifacts:
    reports:
      junit: testreport.xml
    paths:
      - coverage

coverage:
  stage: coverage
  script:
    - flutter test --coverage ./lib
    - lcov -r coverage/lcov.info '*/__test*__/*' -o coverage/lcov_cleaned.info
    - genhtml coverage/lcov_cleaned.info --output=coverage
  artifacts:
    paths:
      - coverage

build_snap:
  stage: build
  # rules:
  #   - if: $CI_COMMIT_TAG
  tags:
    - ubuntu
  before_script:
    - rm -rf *.snap
    - flutter channel stable
    - flutter upgrade
    - flutter precache
    - flutter clean
    - snapcraft clean --use-lxd
  script:
    - snapcraft --use-lxd
  after_script:
   - find . -name 'txdx*amd64.snap' -exec bash -c 'mv $0 $SNAP_AMD64_BINARY' {} \;
  artifacts:
    paths:
      - "$SNAP_AMD64_BINARY"

build_macos:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  tags: 
    - macos
  before_script:
    - rm -rf TxDx.zip
    - flutter channel stable
    - flutter upgrade
    - flutter precache
  script:
    - flutter clean
    - flutter pub get
    - flutter build macos --release
  after_script:
    - cd build/macos/Build/Products/Release
    - zip -r TxDx.zip TxDx.app
    - mv TxDx.zip $CI_PROJECT_DIR
    - cd $CI_PROJECT_DIR
  artifacts:
    paths: 
      - TxDx.zip

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo $PACKAGE_REGISTRY_URL
    - echo $DARWIN_AMD64_BINARY
    - echo $SNAP_AMD64_BINARY
    - |
      curl -v --no-progress-meter --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file TxDx.zip "${PACKAGE_REGISTRY_URL}/${DARWIN_AMD64_BINARY}"
    - |
      curl -v --no-progress-meter --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $SNAP_AMD64_BINARY "${PACKAGE_REGISTRY_URL}/${SNAP_AMD64_BINARY}"

release-snapstore:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - ubuntu
  script:
    - echo $SNAPCRAFT_LOGIN_FILE | base64 --decode --ignore-garbage > snapcraft.login
    - snapcraft login --with snapcraft.login
    - snapcraft push $SNAP_AMD64_BINARY --release stable

release-gitlab:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${DARWIN_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${DARWIN_AMD64_BINARY}\"}" \
        --assets-link "{\"name\":\"${SNAP_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${SNAP_AMD64_BINARY}\"}" \

