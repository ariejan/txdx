default:
  image: cirrusci/flutter:stable
  cache:
    key:
      files:
        - pubspec.lock
    paths:
      - .pub-cache/

variables:
  DARWIN_AMD64_BINARY: "txdx-macos-${CI_COMMIT_TAG}.zip"
  SNAP_AMD64_BINARY: "txdx_${CI_COMMIT_TAG}_amd64.snap"
  WIN_PORTABLE_X64_BINARY: "txdx_${CI_COMMIT_TAG}_portable_x64.zip"
  MSIX_X64_BINARY: "txdx_${CI_COMMIT_TAG}_x64.msix"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/txdx/${CI_COMMIT_TAG}"

stages:
  - test
  - build
  - package
  - upload
  - release

analyze:
  stage: test
  script:
    - flutter pub get
    - flutter analyze

test:
  stage: test
  script:
    - pub global activate junitreport
    - export PATH="$PATH":"$HOME/.pub-cache/bin"
    - flutter pub get
    - flutter test --coverage --machine | tojunit > testreport.xml
  artifacts:
    reports:
      junit: testreport.xml
    paths:
      - coverage

coverage:
  stage: test
  script:
    - flutter test --coverage ./lib
    - lcov -r coverage/lcov.info '*/__test*__/*' -o coverage/lcov_cleaned.info
    - genhtml coverage/lcov_cleaned.info --output=coverage
  artifacts:
    paths:
      - coverage

build_win_zip: 
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - win10
  before_script:
    - flutter channel stable
    - flutter upgrade
    - flutter precache
  script:
    - flutter clean
    - flutter pub get
    - flutter build windows --release
  artifacts:
    paths:
      - build\windows\runner\Release\

package_win_zip:
  stage: package
  image: debian:stable
  rules:
    - if: $CI_COMMIT_TAG
  needs: ['build_win_zip']
  before_script:
    - apt-get update
    - apt-get install -y zip
  script:
    - cd build/windows/runner/Release
    - zip -r txdx.zip .
    - mv txdx.zip $CI_PROJECT_DIR/$WIN_PORTABLE_X64_BINARY
    - cd $CI_PROJECT_DIR
  artifacts:
    paths:
      - "$WIN_PORTABLE_X64_BINARY"

# build_msix: 
#   stage: build
#   rules:
#     - if: $CI_COMMIT_TAG
#   tags:
#     - win10
#   before_script:
#     - flutter channel stable
#     - flutter upgrade
#     - flutter precache
#   script:
#     - flutter clean
#     - flutter pub get
#     - flutter pub run msix:create
#   artifacts:
#     paths:
#       - build\windows\runner\Release\txdx.msix 

build_snap:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - ubuntu
  before_script:
    - rm -rf *.snap
    - snapcraft clean --use-lxd
  script:
    - snapcraft --use-lxd
  after_script:
   - find . -name 'txdx*amd64.snap' -exec bash -c 'mv $0 $SNAP_AMD64_BINARY' {} \;
  artifacts:
    paths:
      - "$SNAP_AMD64_BINARY"

build_macos:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  tags: 
    - macos
  before_script:
    - rm -rf TxDx.zip
    - flutter channel stable
    - flutter upgrade
    - flutter precache
  script:
    - flutter clean
    - flutter pub get
    - flutter build macos --release
  after_script:
    - cd build/macos/Build/Products/Release
    - zip -r TxDx.zip TxDx.app
    - mv TxDx.zip $CI_PROJECT_DIR/$DARWIN_AMD64_BINARY
    - cd $CI_PROJECT_DIR
  artifacts:
    paths: 
      - "$DARWIN_AMD64_BINARY"

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo $MSIX_X64_BINARY
    - ls -lah build/windows/runner/Release
    - echo $CI_PROJECT_DIR
    - ls -lah "${CI_PROJECT_DIR}"/build/windows/runner/Release
    - cp "${CI_PROJECT_DIR}"/build/windows/runner/Release/txdx.msix "${MSIX_X64_BINARY}"
    - ls -lah
    - sha256sum $DARWIN_AMD64_BINARY > SHA256SUMS
    - sha256sum $SNAP_AMD64_BINARY >> SHA256SUMS
    - sha256sum $WIN_PORTABLE_X64_BINARY >> SHA256SUMS
    # - sha256sum $MSIX_X64_BINARY >> SHA256SUMS
    - |
      curl -v --no-progress-meter --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $DARWIN_AMD64_BINARY "${PACKAGE_REGISTRY_URL}/${DARWIN_AMD64_BINARY}"
    - |
      curl -v --no-progress-meter --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $SNAP_AMD64_BINARY "${PACKAGE_REGISTRY_URL}/${SNAP_AMD64_BINARY}"
    - |
      curl -v --no-progress-meter --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $WIN_PORTABLE_X64_BINARY "${PACKAGE_REGISTRY_URL}/${WIN_PORTABLE_X64_BINARY}"
    - |
      curl -v --no-progress-meter --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file SHA256SUMS "${PACKAGE_REGISTRY_URL}/SHA256SUMS"
    # - |
    #   curl -v --no-progress-meter --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file $MSIX_X64_BINARY "${PACKAGE_REGISTRY_URL}/${MSIX_X64_BINARY}"

release-snapstore:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - ubuntu
  script:
    - echo $SNAPCRAFT_LOGIN_FILE | base64 --decode --ignore-garbage > snapcraft.login
    - snapcraft login --with snapcraft.login
    - snapcraft push $SNAP_AMD64_BINARY --release stable

release-gitlab:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${DARWIN_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${DARWIN_AMD64_BINARY}\"}" \
        --assets-link "{\"name\":\"${SNAP_AMD64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${SNAP_AMD64_BINARY}\"}" \
        --assets-link "{\"name\":\"${WIN_PORTABLE_X64_BINARY}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${WIN_PORTALBLE_X64_BINARY}\"}" \
        --assets-link "{\"name\":\"SHA256SUMS\",\"url\":\"${PACKAGE_REGISTRY_URL}/SHA256SUMS\"}" \

